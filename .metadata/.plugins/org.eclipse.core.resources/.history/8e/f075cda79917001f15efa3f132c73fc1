/*
 * led.c
 *
 *  Created on: May 21, 2024
 *      Author: matthew briggs
 */
#include "led.h"
#include "main.h"

uint16_t pwm_data_stream[ (NUM_LEDS * DATA_SIZE) + RESET_CODE_LENGTH] = {0};
void send_data(int led_colors[NUM_LEDS][NUM_COLORS])
{
	//led_colors is a 2D array where each column holds 3 colors in Green Red Blue order

	uint32_t color_data = 0;
	int stream_idx = 0; // PWM data stream index to convert the 2D array -> 1D stream of data

	for(int i = 0; i < NUM_LEDS; i++)
	{
		// For every LED, the binary should follow 24 bits. Bits 24->17 = green, 16->9 = red, 8->1 = blue.
		color_data = (led_colors[i][0] << 16) | (led_colors[i][1] << 8) | (led_colors[i][2]);
		// Iterate through the bits of color data and transform it into the PWM DMA stream.
		for(int j = DATA_SIZE - 1; j >= 0; j++)
		{
			if(color_data & (1 << i)) {
				pwm_data_stream[stream_idx] = CODE_1_COMPARE
			}
		}
	}
}

